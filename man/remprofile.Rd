% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remprofile.R
\name{remprofile}
\alias{remprofile}
\title{Extract DNA methylation data profiled in RE}
\usage{
remprofile(methyDat, REtype = c("Alu", "L1"), Seq.GR = NULL,
  RE = NULL, impute = FALSE, imputebyrow = TRUE, verbose = FALSE)
}
\arguments{
\item{methyDat}{A \code{\link{RatioSet}}, \code{\link{GenomicRatioSet}}, \code{\link{DataFrame}},
\code{data.table}, \code{data.frame}, or \code{matrix} of Illumina BeadChip methylation data
(450k or EPIC array) or Illumina methylation sequencing data.}

\item{REtype}{Type of RE. Currently \code{"Alu"} and \code{"L1"} are supported.}

\item{Seq.GR}{A \code{\link{GRanges}} object containing genomic locations of the CpGs profiled by sequencing
platforms. This parameter should not be \code{NULL} if the input methylation data \code{methyDat} are
obtained by sequencing. Note that the genomic location must be in hg19 build. See details in \code{\link{initREMP}}.}

\item{RE}{A \code{\link{GRanges}} object containing user-specified RE genomic location information.
If \code{NULL}, the function will retrive RepeatMasker RE database from \code{\link{AnnotationHub}}
(build hg19).}

\item{impute}{Parameter used by \code{\link{grooMethy}}. If \code{TRUE}, K-Nearest Neighbouring
imputation will be applied to fill the missing values. Default = \code{FALSE}.}

\item{imputebyrow}{Parameter used by \code{\link{grooMethy}}. If \code{TRUE}, missing values will
be imputed using similar values in row (i.e., across samples); if \code{FALSE}, missing values
will be imputed using similar values in column (i.e., across CpGs). Default is \code{TRUE}.}

\item{verbose}{Logical parameter. Should the function be verbose?}
}
\value{
A \code{\link{REMProduct}} object containing profiled RE methylation results.
}
\description{
\code{remprofile} is used to extract profiled methylation of CpG sites in RE.
}
\examples{
data(Alu.demo)
if (!exists("GM12878_450k")) GM12878_450k <- getGM12878("450k")
remprofile.res <- remprofile(GM12878_450k, REtype = "Alu", RE = Alu.demo)
details(remprofile.res)
rempB(remprofile.res) # Methylation data (beta value)

remprofile.res <- rempAggregate(remprofile.res)
details(remprofile.res)
rempB(remprofile.res) # Methylation data (beta value)
}
